#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Construction Sign \"Controlled Demolition\""]
#Text["Boss 4 - Spell Card 3"]
#include"script/default_system/Default_ShotConst.txt"
#include"script/default_system/Default_Effect.txt"
#include"script/custom/game/cutin.dnh"
let objBoss;
let objScene = GetEnemyBossSceneObjectID();
let ball;
let locus;
let angleT;
@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(3000);
	}
	case(EV_REQUEST_TIMER)
	{
		SetScriptResult(60);
	}
	case(EV_REQUEST_SPELL_SCORE)
	{
		SetScriptResult(30000);
	}
}
@Initialize{
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	ObjMove_SetX(objBoss, GetCenterX());
	ObjMove_SetY(objBoss, 60);

	let boss4 = "script/custom/game/images/boss4.png";
	ObjCutin_SetSpellcardS4("Construction Sign \"Controlled Demolition\"", NAZRIN, boss4, 240, 104, 104);
	ObjCutin_LaunchS3(NAZRIN, boss4, "Normal");
	ObjEnemyBossScene_StartSpell(objScene);

	TDrawLoop;
	TFinalize;
	wait(60);
	charge;
	fire;
}
@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, bossX(), bossY(), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, bossX(), bossY(), 24);
	yield;
}
function GetCenterX(){
	return GetStgFrameWidth() / 2;
}
function GetCenterY(){
	return GetStgFrameHeight() / 2;
}
function wait(n) {
	loop(n) {
		yield;
	}
}
function bossAlive() {
	if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		return true;
	} else {
		return false;
	}
}
function bossX() {
	return ObjMove_GetX(objBoss);
}
function bossY() {
	return ObjMove_GetY(objBoss);
}
function checkBomb() {
	return ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT);
}
function checkDeath() {
	return ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
}
function inBounds(thing) {
	if (ObjMove_GetX(thing) > 0 && ObjMove_GetX(thing) < 380 && ObjMove_GetY(thing) > 30 && ObjMove_GetY(thing) < 450) {
		return true;
	} else {
		return false;
	}
}
task charge {
	while(bossAlive()) {
		ObjMove_SetDestAtSpeed(objBoss, rand(GetCenterX() + 200, GetCenterX() - 200), 60, 3);
		angleT = GetAngleToPlayer(objBoss);
		ball = CreateShotA1(bossX(), bossY(), 3, angleT, DS_BALL_L_RED, 5);
		ObjShot_SetSpellResist(ball, true);
		while(inBounds(ball)) {
			yield;
		}
		locus = CreateShotOB1(ball, 0, 0, DS_BALL_L_RED, 0);
		Obj_Delete(ball);
		detonate;
		wait(90);
	}
}
task detonate {
	ascent(i in 1..4) {
		ascent(j in 1..20) {
			let angle = j * 360 / 20;
			let speed = 2.75 + i * 0.25;
			CreateShotOA1(locus, speed, angle, DS_BALL_M_BLUE, 0);
		}
	}
	Obj_Delete(locus);
}
task fire {
	while (bossAlive()) {
		angleT = GetAngleToPlayer(objBoss);
		ascent(i in 1..30) {
			let angle = i * 360 / 30;
			CreateShotOA1(objBoss, 3, angle, DS_BALL_S_WHITE, 5);
		}
		ascent(i in 1..4) {
			CreateShotOA1(objBoss, 4, angleT + 15, DS_KNIFE_KOUMA_SKY, 2);
			CreateShotOA1(objBoss, 4, angleT - 15, DS_KNIFE_KOUMA_SKY, 2);
			wait(5);
		}
		wait(90);
	}
}
task TDrawLoop {
	let imgExRumia = "script/ExRumia/ExRumia.png";
	ObjPrim_SetTexture(objBoss, imgExRumia);
	ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
	ObjSprite2D_SetDestCenter(objBoss);
}
task TFinalize {
	while(bossAlive()) {
		yield;
	}
	if (checkBomb() + checkDeath() == 0) {
		AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
	}
	Obj_Delete(objBoss);
	DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
	SetAutoDeleteObject(true);
	CloseScript(GetOwnScriptID());
	return;
}