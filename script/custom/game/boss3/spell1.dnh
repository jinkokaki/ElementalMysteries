#TouhouDanmakufu[Single]
#ScriptVersion[3]
#Title["Hunter Sign \"Dubious Self Defense\""]
#Text["Boss 3 - Spell Card 1"]
#include"script/default_system/Default_ShotConst.txt"
#include"script/default_system/Default_Effect.txt"
#include"script/custom/game/cutin.dnh"
let objBoss;
let objScene = GetEnemyBossSceneObjectID();
let angleT;
@Event{
	alternative(GetEventType())
	case(EV_REQUEST_LIFE)
	{
		SetScriptResult(2000);
	}
	case(EV_REQUEST_TIMER)
	{
		SetScriptResult(60);
	}
	case(EV_REQUEST_SPELL_SCORE)
	{
		SetScriptResult(30000);
	}
}
@Initialize{
	objBoss = ObjEnemy_Create(OBJ_ENEMY_BOSS);
	ObjEnemy_Regist(objBoss);
	ObjMove_SetX(objBoss, GetCenterX());
	ObjMove_SetY(objBoss, 60);

	let boss3 = "script/custom/game/images/boss3.png";
	ObjCutin_SetSpellcardS4("Hunter Sign \"Dubious Self Defense\"", NAZRIN, boss3, 240, 104, 104);
	ObjCutin_LaunchS3(NAZRIN, boss3, "Normal");
	ObjEnemyBossScene_StartSpell(objScene);

	TDrawLoop;
	TFinalize;
	wait(60);
	ring;
}
@MainLoop{
	ObjEnemy_SetIntersectionCircleToShot(objBoss, bossX(), bossY(), 32);
	ObjEnemy_SetIntersectionCircleToPlayer(objBoss, bossX(), bossY(), 24);
	yield;
}
function GetCenterX(){
	return GetStgFrameWidth() / 2;
}
function GetCenterY(){
	return GetStgFrameHeight() / 2;
}
function wait(n) {
	loop(n) {
		yield;
	}
}
function bossAlive() {
	if (ObjEnemy_GetInfo(objBoss, INFO_LIFE) > 0) {
		return true;
	} else {
		return false;
	}
}
function bossX() {
	return ObjMove_GetX(objBoss);
}
function bossY() {
	return ObjMove_GetY(objBoss);
}
function checkBomb() {
	return ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SPELL_COUNT);
}
function checkDeath() {
	return ObjEnemyBossScene_GetInfo(objScene, INFO_PLAYER_SHOOTDOWN_COUNT)
}
function inBounds(thing) {
	if (ObjMove_GetX(thing) > 0 && ObjMove_GetX(thing) < 380 && ObjMove_GetY(thing) > 30 && ObjMove_GetY(thing) < 450) {
		return true;
	} else {
		return false;
	}
}
function randInt(min, max) {
	return truncate(rand(min, max + 1));
}
task ring {
	ascent(i in 0..30) {
		let angle = i * 360 / 30;
		CreateShotA1(GetPlayerX() + 90*cos(angle), GetPlayerY() + 90*sin(angle), 0, angle, 1, 0);
	}
	wait(180);
	mortar
}
task mortar {

}
task TDrawLoop {
	let imgExRumia = "script/ExRumia/ExRumia.png";
	ObjPrim_SetTexture(objBoss, imgExRumia);
	ObjSprite2D_SetSourceRect(objBoss, 64, 1, 127, 64);
	ObjSprite2D_SetDestCenter(objBoss);
}
task TFinalize {
	while(bossAlive()) {
		yield;
	}
	if (checkBomb() + checkDeath() == 0) {
		AddScore(ObjEnemyBossScene_GetInfo(objScene, INFO_SPELL_SCORE));
	}
	Obj_Delete(objBoss);
	DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
	SetAutoDeleteObject(true);
	CloseScript(GetOwnScriptID());
	return;
}